services:
  db:
    image: postgres:latest
    container_name: ideaboard-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ideaboard}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ideaboard123}
      POSTGRES_DB: ${POSTGRES_DB:-ideaboard}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ideaboard}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: ideaboard-backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 5000
      DATABASE_URL: postgresql://${POSTGRES_USER:-ideaboard}:${POSTGRES_PASSWORD:-ideaboard123}@db:5432/${POSTGRES_DB:-ideaboard}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:5000/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000}
    container_name: ideaboard-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000}
    depends_on:
      - backend

volumes:
  postgres_data:
